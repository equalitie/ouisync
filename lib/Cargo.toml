[package]
name = "ouisync"
description = "Secure P2P file sharing (shared library)"
publish = false
authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[[bench]]
name = "basic"
harness = false

[[bench]]
name = "large_file"
harness = false

[[bench]]
name = "swarm"
harness = false

[dependencies]
argon2 = "0.5.3"
async-recursion = "1.0.0"
async-speed-limit = { version = "0.4.2", features = ['tokio'] }
async-trait = { workspace = true }
backoff = "0.4.0"
base64 = "0.22.1"
bincode = "1.3"
blake3 = { version = "1.5.0", features = ["traits-preview"] }
btdht = { workspace = true }
bytes = { workspace = true }
camino = { workspace = true }
chacha20 = "0.9.1"
chrono = { workspace = true }
deadlock = { path = "../deadlock" }
ed25519-dalek = { version = "2.0", features = ["rand_core", "serde"] }
either = { version = "1.6.1", default-features = false }
futures-util = { workspace = true }
generic-array = { version = "0.14.7", features = ["serde"] }
hex = "0.4.3"
hex_fmt = { workspace = true }
if-watch = { version = "3.2.0", features = ["tokio"] }
include_dir = "0.7.3"
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true, default-features = false, optional = true }
net = { package = "ouisync-net", path = "../net" }
noise-protocol = "0.2.0"
noise-rust-crypto = { version = "0.6.1", default-features = false, features = ["use-x25519", "use-chacha20poly1305", "use-blake2"] }
num_enum = { workspace = true }
ouisync-macros = { path = "../macros" }
parse-size = { version = "1.0.0", features = ["std"] }
pin-project-lite = { workspace = true }
rand = { workspace = true }
ref-cast = "1.0.14"
rupnp = { version = "2.0.0", default-features = false, features = [] }
scoped_task = { path = "../scoped_task" }
serde = { workspace = true }
serde_bytes = { workspace = true }
slab = { workspace = true }
sqlx = { workspace = true }
ssdp-client = "2.0.0"
state_monitor = { path = "../state_monitor" }
subtle = { version = "2.5.0", default-features = false, features = ["core_hint_black_box"] }
thiserror = { workspace = true }
tokio = { workspace = true }
tokio-stream = { workspace = true, features = ["sync"] }
tokio-util = { workspace = true, features = ["time", "codec"] }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = [ "env-filter" ] }
turmoil = { workspace = true, optional = true }
xxhash-rust = { version = "0.8.12", default-features = false, features = ["xxh3"] }
urlencoding = "2.1.0"
vint64 = "1.0.1"
zeroize = "1.6.0"

[dev-dependencies]
assert_matches = { workspace = true }
clap = { workspace = true }
criterion = { workspace = true, features = ["html_reports"] }
hdrhistogram = { version = "7.5.4", default-features = false, features = ["sync"] }
metrics_ext = { path = "../metrics_ext" }
ouisync-tracing-fmt = { path = "../tracing_fmt" }
proptest = { workspace = true }
rmp = { workspace = true }
rmp-serde = { workspace = true }
serde_json = { workspace = true }
similar-asserts = { workspace = true }
tempfile = { workspace = true }
test-strategy = { workspace = true }
tokio = { workspace = true, features = ["process", "test-util"] }

[features]
analyze-protocol = []
influxdb         = []
prometheus       = ["metrics-exporter-prometheus/push-gateway"]
simulation       = ["rand/simulation", "turmoil"]
